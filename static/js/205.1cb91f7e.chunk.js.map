{"version":3,"file":"static/js/205.1cb91f7e.chunk.js","mappings":"oMAEaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAWtB,C,0GChBYI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,kBAAMC,OAAO,GAAGJ,SAPO,SAAAK,GACvBA,EAAEC,iBACFN,EAASE,GACTC,EAAS,GACV,EAGC,WACE,kBAAOI,QAAQ,GAAf,UACE,kBACEC,KAAK,OACLC,MAAOP,EACPQ,SAjBkB,SAAAL,GACxB,IAAQI,EAAUJ,EAAEM,cAAZF,MACRN,EAASM,EACV,EAeOG,KAAK,aAIT,mBAAQJ,KAAK,SAAb,sBAGL,E,oCCTD,EAnBe,WACb,OACE,0BACE,SAAC,KAAD,CACEK,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,iBAAiB,GACjBC,iBAAiB,GACjBC,SAAS,GACTC,UAAU,8BAIjB,ECkDD,EA5DkB,WAChB,OAA4BrB,EAAAA,EAAAA,UAAS,MAArC,eAAOZ,EAAP,KAAekC,EAAf,KACA,GAAkCtB,EAAAA,EAAAA,WAAS,GAA3C,eAAOuB,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAM3B,EAAQyB,EAAaG,IAAI,UAC1B5B,IAILuB,GAAa,GAEbM,YAAW,YACTC,EAAAA,EAAAA,IAAkB9B,GACf+B,MAAK,SAAA5C,GACJ,IAAKA,EAAO6C,OACV,MAAM,IAAIC,MAEZZ,EAAUlC,EACX,IACA+C,OAAM,SAAAC,GAAK,OACVC,EAAAA,GAAAA,OACE,8DACgC,uBAAIpC,IADpC,OAFQ,IAOXqC,SAAQ,kBAAMd,GAAa,EAAnB,GACZ,GAAE,KACJ,GAAE,CAACE,IAQJ,OACE,6BACE,SAAC5B,EAAD,CAAWC,SARM,SAAAS,GACnB,IAAMP,EAAQO,EAAM+B,cAAcC,OAC7BvC,GACL0B,EAAgB,CAAEc,OAAQxC,GAC3B,IAKIsB,IAAa,SAAC,EAAD,IACbnC,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,KAC9B,SAAC,KAAD,CACEsD,SAAS,YACTC,UAAW,IACXC,MAAO,EACPC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,cAIb,C,sICjEKC,E,OAAUC,EAAAA,OAAa,CAAEC,QAAS,iCAY3BxB,EAAiB,mCAAG,WAAM9B,GAAN,yFACRoD,EAAQxB,IAAI,gBAAiB,CAClD2B,OAAQ,CACNC,QAAS,mCACTxD,MAAAA,KAJ2B,uBACvByD,EADuB,EACvBA,KADuB,kBAQxBA,EAAKC,SARmB,2CAAH,sDAWjBC,EAAc,mCAAG,WAAOlE,GAAP,4FAAWa,EAAX,+BAAkB,GAAlB,SACR8C,EAAQxB,IAAI,UAAYnC,EAAKa,EAAM,CACrDiD,OAAQ,CACNC,QAAS,sCAHe,cACtBjE,EADsB,yBAOrBA,EAAMkE,MAPe,2CAAH,sDAUdG,EAAmB,mCAAG,oGACZR,EAAQxB,IAAI,sBAAuB,CACtD2B,OAAQ,CACNC,QAAS,sCAHoB,cAC3BrE,EAD2B,yBAO1BA,EAAOsE,KAAKC,SAPc,2CAAH,oD","sources":["components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","pages/Movies/MoviePage.jsx","services/tmdb.service.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies}) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n\n          \n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleIтputChange = e => {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form action=\"\" onSubmit={handleFormSubmit}>\n      <label htmlFor=\"\">\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleIтputChange}\n          name=\"query\"\n        />\n      </label>\n\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { CirclesWithBar } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <CirclesWithBar\n        height=\"100\"\n        width=\"100\"\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        barColor=\"\"\n        ariaLabel=\"circles-with-bar-loading\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { fetchMoviesByName } from 'services/tmdb.service';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('search');\n    if (!query) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    setTimeout(() => {\n      fetchMoviesByName(query)\n        .then(movies => {\n          if (!movies.length) {\n            throw new Error();\n          }\n          setMovies(movies);\n        })\n        .catch(error =>\n          toast.error(\n            <span>\n              No movies matched your query (<b>{query}</b>)\n            </span>\n          )\n        )\n        .finally(() => setIsLoading(false));\n    }, 500);\n  }, [searchParams]);\n\n  const handleSubmit = value => {\n    const query = value.toLowerCase().trim();\n    if (!query) return;\n    setSearchParams({ search: query });\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        limit={3}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </main>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst tmdbAPI = axios.create({ baseURL: 'https://api.themoviedb.org/3' });\n\n// export const fetchMovies = async type => {\n//   const { data } = await tmdbAPI.get(type, {\n//     params: {\n//       api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n//     },\n//   });\n\n//   console.log(data);\n// };\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await tmdbAPI.get('/search/movie', {\n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMovieById = async (id, type = '') => {\n  const movie = await tmdbAPI.get('/movie/' + id + type, {\n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n    },\n  });\n\n  return movie.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const movies = await tmdbAPI.get('/trending/movie/day', { \n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n    },\n  });\n\n  return movies.data.results;\n};\n"],"names":["MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","Searchbar","onSubmit","useState","query","setQuery","action","e","preventDefault","htmlFor","type","value","onChange","currentTarget","name","height","width","color","wrapperStyle","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","setTimeout","fetchMoviesByName","then","length","Error","catch","error","toast","finally","toLowerCase","trim","search","position","autoClose","limit","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","tmdbAPI","axios","baseURL","params","api_key","data","results","fetchMovieById","fetchTrendingMovies"],"sourceRoot":""}