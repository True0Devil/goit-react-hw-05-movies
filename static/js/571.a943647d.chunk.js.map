{"version":3,"file":"static/js/571.a943647d.chunk.js","mappings":"sMA0DA,UArDoB,WAAO,IAAD,QACxB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeL,GAASM,KAAKP,EAC9B,GAAE,CAACC,IAECF,EAIL,OACE,6BACE,SAAC,KAAD,CAAMS,GAAE,oBAAEL,EAASM,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAlC,mBAEA,gBACEC,IAAG,0CAAqCZ,EAAMa,aAC9CC,IAAI,MAEN,0BACGd,EAAMe,MADT,eACkBf,EAAMgB,oBADxB,aACkB,EAAoBC,MAAM,EAAG,GAD/C,QAGA,wCAAqC,GAArBjB,EAAMkB,aAAtB,QAEA,sCACA,uBAAIlB,EAAMmB,YAEV,oCACA,kCACGnB,EAAMoB,cADT,aACG,EAAcC,KAAI,SAAAC,GAAK,OACtB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADO,OAK1B,gCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMf,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAIJ,SAAC,KAAD,SAIP,C,sICtDKgB,E,OAAUC,EAAAA,OAAa,CAAEC,QAAS,iCAY3BC,EAAiB,mCAAG,WAAMC,GAAN,yFACRJ,EAAQK,IAAI,gBAAiB,CAClDC,OAAQ,CACNC,QAAS,mCACTH,MAAAA,KAJ2B,uBACvBI,EADuB,EACvBA,KADuB,kBAQxBA,EAAKC,SARmB,2CAAH,sDAWjB3B,EAAc,mCAAG,WAAOiB,GAAP,4FAAWW,EAAX,+BAAkB,GAAlB,SACRV,EAAQK,IAAI,UAAYN,EAAKW,EAAM,CACrDJ,OAAQ,CACNC,QAAS,sCAHe,cACtBhC,EADsB,yBAOrBA,EAAMiC,MAPe,2CAAH,sDAUdG,EAAmB,mCAAG,oGACZX,EAAQK,IAAI,sBAAuB,CACtDC,OAAQ,CACNC,QAAS,sCAHoB,cAC3BK,EAD2B,yBAO1BA,EAAOJ,KAAKC,SAPc,2CAAH,oD","sources":["pages/SingleMovie/SingleMovie.jsx","services/tmdb.service.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\n\nimport { fetchMovieById } from 'services/tmdb.service';\n\nconst SingleMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieID } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieById(movieID).then(setMovie);\n  }, [movieID]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <main>\n      <Link to={location.state?.from ?? '/movies'}>Back</Link>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n        alt=\"\"\n      />\n      <h1>\n        {movie.title} ({movie.release_date?.slice(0, 4)})\n      </h1>\n      <p>User Score: {movie.vote_average * 10}%</p>\n\n      <h2>Overview</h2>\n      <p>{movie.overview}</p>\n\n      <h3>Genres</h3>\n      <ul>\n        {movie.genres?.map(genre => (\n          <li key={genre.id}>{genre.name}</li>\n        ))}\n      </ul>\n\n      <section>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n\n        <Outlet />\n      </section>\n    </main>\n  );\n};\n\nexport default SingleMovie;","import axios from 'axios';\n\nconst tmdbAPI = axios.create({ baseURL: 'https://api.themoviedb.org/3' });\n\n// export const fetchMovies = async type => {\n//   const { data } = await tmdbAPI.get(type, {\n//     params: {\n//       api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n//     },\n//   });\n\n//   console.log(data);\n// };\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await tmdbAPI.get('/search/movie', {\n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMovieById = async (id, type = '') => {\n  const movie = await tmdbAPI.get('/movie/' + id + type, {\n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n    },\n  });\n\n  return movie.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const movies = await tmdbAPI.get('/trending/movie/day', { \n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n    },\n  });\n\n  return movies.data.results;\n};\n"],"names":["useState","movie","setMovie","movieID","useParams","location","useLocation","useEffect","fetchMovieById","then","to","state","from","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","genre","name","id","tmdbAPI","axios","baseURL","fetchMoviesByName","query","get","params","api_key","data","results","type","fetchTrendingMovies","movies"],"sourceRoot":""}