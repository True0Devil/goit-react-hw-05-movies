{"version":3,"file":"static/js/726.8f9e3605.chunk.js","mappings":"8LAmCA,UA9BgB,WACd,OAA8BA,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,EAAS,YAAYI,MAAK,SAAAN,GAAO,OAC9CC,EAAWD,EAAQO,QAD2B,GAGjD,GAAE,CAACL,IAECF,EAIL,OACE,wBACGA,EAAQQ,OAAS,EAChBR,EAAQS,KAAI,SAAAC,GAAM,OAChB,2BACE,wBAAKA,EAAOC,eAAeC,YAC3B,uBAAIF,EAAOG,YAFJH,EAAOI,GADA,KAOlB,yCAIP,C,sIC/BKC,E,OAAUC,EAAAA,OAAa,CAAEC,QAAS,iCAY3BC,EAAiB,mCAAG,WAAMC,GAAN,yFACRJ,EAAQK,IAAI,gBAAiB,CAClDC,OAAQ,CACNC,QAAS,mCACTH,MAAAA,KAJ2B,uBACvBI,EADuB,EACvBA,KADuB,kBAQxBA,EAAKhB,SARmB,2CAAH,sDAWjBF,EAAc,mCAAG,WAAOS,GAAP,4FAAWU,EAAX,+BAAkB,GAAlB,SACRT,EAAQK,IAAI,UAAYN,EAAKU,EAAM,CACrDH,OAAQ,CACNC,QAAS,sCAHe,cACtBG,EADsB,yBAOrBA,EAAMF,MAPe,2CAAH,sDAUdG,EAAmB,mCAAG,oGACZX,EAAQK,IAAI,sBAAuB,CACtDC,OAAQ,CACNC,QAAS,sCAHoB,cAC3BK,EAD2B,yBAO1BA,EAAOJ,KAAKhB,SAPc,2CAAH,oD","sources":["pages/SingleMovie/Reviews/Reviews.jsx","services/tmdb.service.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieById } from 'services/tmdb.service';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    fetchMovieById(movieID, '/reviews').then(reviews =>\n      setReviews(reviews.results)\n    );\n  }, [movieID]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <li key={review.id}>\n            <h5>{review.author_details.username}</h5>\n            <p>{review.content}</p>\n          </li>\n        ))\n      ) : (\n        <div>No reviews</div>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst tmdbAPI = axios.create({ baseURL: 'https://api.themoviedb.org/3' });\n\n// export const fetchMovies = async type => {\n//   const { data } = await tmdbAPI.get(type, {\n//     params: {\n//       api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n//     },\n//   });\n\n//   console.log(data);\n// };\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await tmdbAPI.get('/search/movie', {\n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMovieById = async (id, type = '') => {\n  const movie = await tmdbAPI.get('/movie/' + id + type, {\n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n    },\n  });\n\n  return movie.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const movies = await tmdbAPI.get('/trending/movie/day', { \n    params: {\n      api_key: '94b41ec0e6f6b6ffeb7ae80dc6b59179',\n    },\n  });\n\n  return movies.data.results;\n};\n"],"names":["useState","reviews","setReviews","movieID","useParams","useEffect","fetchMovieById","then","results","length","map","review","author_details","username","content","id","tmdbAPI","axios","baseURL","fetchMoviesByName","query","get","params","api_key","data","type","movie","fetchTrendingMovies","movies"],"sourceRoot":""}